import { DomainsClient } from './clients/domains';
import { IpfsClient } from './clients/ipfs';
import { IpnsClient } from './clients/ipns';
import { ProjectsClient } from './clients/projects';
import { SitesClient } from './clients/sites';
import { UserClient } from './clients/user';
import { AccessTokenService } from './libs/AccessTokenService/AccessTokenService';
export * from './libs/AccessTokenService/PersonalAccessTokenService';
export * from './libs/AccessTokenService/StaticAccessTokenService';
export * from './libs/AccessTokenService/Web3authAccessTokenService';
type FleekSdkOptions = {
    projectId?: string | undefined;
    ipnsServiceApiUrl?: string;
    graphqlServiceApiUrl?: string;
    sitesServiceApiUrl?: string;
    ipfsStorageApiUrl?: string;
    domainsServiceApiUrl?: string;
    accessTokenService: AccessTokenService;
};
export declare class FleekSdk {
    private accessTokenService;
    private userClient?;
    private projectsClient?;
    private graphqlServiceApiUrl;
    private ipnsClient?;
    private ipnsServiceApiUrl;
    private ipfsClient?;
    private ipfsStorageApiUrl;
    private sitesClient?;
    private sitesServiceApiUrl;
    private domainsClient?;
    private domainsServiceApiUrl;
    constructor({ ipnsServiceApiUrl, graphqlServiceApiUrl, sitesServiceApiUrl, ipfsStorageApiUrl, domainsServiceApiUrl, accessTokenService, }: FleekSdkOptions);
    user: () => UserClient;
    ipns: () => IpnsClient;
    ipfs: () => IpfsClient;
    sites: () => SitesClient;
    projects: () => ProjectsClient;
    domains: () => DomainsClient;
}
//# sourceMappingURL=FleekSdk.d.ts.map