import { AuthenticatedClient, AuthenticatedClientOptions } from '../libs/AuthenticatedClient';
type UserClientOptions = AuthenticatedClientOptions & {
    graphqlServiceApiUrl: string;
};
export declare class UserClient extends AuthenticatedClient {
    private client?;
    private graphqlServiceApiUrl;
    private getClient;
    constructor(options: UserClientOptions);
    listPersonalAccessTokens: () => Promise<Pick<{
        createdAt: any;
        id: string;
        maskedToken: string;
        name?: string | undefined;
        __typename: "PersonalAccessToken";
    }, "createdAt" | "id" | "name" | "maskedToken">[]>;
    deletePersonalAccessToken: ({ id }: {
        id: string;
    }) => Promise<boolean>;
}
export {};
//# sourceMappingURL=user.d.ts.map